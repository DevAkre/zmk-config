/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

/ {
    combos {
        compatible = "zmk,combos";

        combo_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <52 0 36 42>;
            require-prior-idle-ms = <500>;
        };

        combo_toggle_qwerty {
            bindings = <&tog 1>;
            key-positions = <5 17 24 36>;
        };

        Caps_Word {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };

        window_toggle {
            bindings = <&mo 4>;
            key-positions = <52 55>;
        };
    };

    macros {
        Z_UNDO: Z_UNDO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            label = "Z_UNDO";
        };

        Z_REDO: Z_REDO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(Z))>;
            label = "Z_REDO";
        };

        Z_SAVE: Z_SAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(S)>;
            label = "Z_SAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                         &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB     &kp Q   &kp W   &kp F     &kp P     &kp B                          &kp J   &kp L     &kp U      &kp Y    &kp SEMI  &kp MINUS
&kp LSHIFT  &kp A   &kp R   &kp S     &kp T     &kp G                          &kp M   &kp N     &kp E      &kp I    &kp O     &kp RSHIFT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp D     &kp V   &kp LBKT     &kp RBKT  &kp K   &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                            &kp LGUI  &kp LALT  &mo 2   &kp SPACE    &kp RET   &mo 3   &kp BSPC  &kp DEL
            >;
        };

        qwerty_layer {

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                         &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                          &kp Y   &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                          &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT     &kp RBKT  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                           &kp LGUI  &kp LALT  &mo 2   &kp SPACE    &kp RET   &mo 3   &kp BSPC  &kp DEL
            >;
        };

        lower_layer {

            bindings = <
&kp K_LOCK  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans     &trans    &trans    &trans
&kp F12     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6     &kp F7     &kp F8     &kp F9    &kp F10   &kp F11
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&Z_SAVE     &Z_REDO       &kp K_CUT     &kp K_COPY    &kp K_PASTE   &Z_UNDO       &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                        &trans        &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {

            bindings = <
&kp K_LOCK  &trans              &trans        &trans        &trans        &trans                                &trans    &trans     &trans     &trans     &trans     &trans
&trans      &trans              &trans        &kp C_BRI_DN  &kp C_BRI_UP  &trans                                &kp INS   &kp END    &kp PG_DN  &kp PG_UP  &kp HOME   &trans
&trans      &kp LC(LS(LA(F1)))  &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp LC(LS(LA(F2)))                    &trans    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans      &trans              &kp C_REWIND  &kp C_PP      &kp C_FF      &trans              &trans    &trans  &kp PLUS  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH
                                              &trans        &trans        &trans              &trans    &trans  &trans    &trans     &trans
            >;
        };

        window_layer {
            
            bindings = <
&trans  &trans                &trans                &trans              &trans                 &trans                        &trans      &trans            &trans            &trans           &trans             &trans
&trans  &kp LC(F1)            &kp LC(F2)            &kp LC(F3)          &kp LC(F4)             &kp LC(F5)                    &kp LC(F6)  &kp LC(F7)        &kp LC(F8)        &kp LC(F9)       &kp LC(F10)        &trans
&trans  &kp LC(LS(LA(LEFT)))  &kp LC(LS(LA(DOWN)))  &kp LC(LS(LA(UP)))  &kp LC(LS(LA(RIGHT)))  &trans                        &trans      &kp LC(LA(LEFT))  &kp LC(LA(DOWN))  &kp LC(LA(UP))   &kp LC(LA(RIGHT))  &trans
&trans  &kp LA(F4)            &kp LG(PG_DN)         &kp LG(PG_UP)       &trans                 &trans      &trans    &trans  &trans      &kp LC(LS(F7))    &kp LC(LS(F7))    &kp LS(LC(F10))  &trans             &trans
                                                    &trans              &trans                 &trans      &trans    &trans  &trans      &trans            &trans
            >;
        };
    };
};
